(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{476:function(a,t,s){"use strict";s.r(t);var e=s(2),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"技巧-1-优化配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧-1-优化配置"}},[a._v("#")]),a._v(" 技巧 1：优化配置")]),a._v(" "),t("p",[a._v("Git 在全局、用户和本地级别上都是高度可配置的。\n"),t("a",{attrs:{href:"https://git-scm.com/docs/git-config",target:"_blank",rel:"noopener noreferrer"}},[a._v("git配置文档"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"查找顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查找顺序"}},[a._v("#")]),a._v(" 查找顺序")]),a._v(" "),t("p",[a._v("每个设置都可以被覆盖：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("本地级别:\n项目文件夹/.git/config\n用户级别:\n用户目录/.config/git\n用户目录/.gitconfig\n全局级别：\ngit目录/etc/gitconfig\n")])])]),t("h2",{attrs:{id:"修改配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改配置"}},[a._v("#")]),a._v(" 修改配置")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 全局设置")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("keypath"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 本地设置")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("keypath"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"显示当前设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#显示当前设置"}},[a._v("#")]),a._v(" 显示当前设置")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示当前设置及其来源")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--list")]),a._v(" --show-origin\n")])])]),t("h2",{attrs:{id:"一些有用的配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些有用的配置"}},[a._v("#")]),a._v(" 一些有用的配置")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设定身份")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" user.name"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<your name>"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" user.email "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your email"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h1",{attrs:{id:"技巧-2-别名-alias"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧-2-别名-alias"}},[a._v("#")]),a._v(" 技巧 2：别名(alias)")]),a._v(" "),t("p",[t("a",{attrs:{href:""}},[a._v("Git 别名")]),a._v("\n创建别名来保存常用的git命令：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建别名")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias."),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("alias-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<git command>"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用别名")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("alias-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("more optional arguments"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"一些有用的别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些有用的别名"}},[a._v("#")]),a._v(" 一些有用的别名")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 撤销上次提交")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.undo "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"reset --soft HEAD^"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将暂存区更新修订到上次提交 (不改变提交信息)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.amend "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"commit --amend --no-edit"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 压缩的状态输出")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.st "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"status -sb"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 用 GRAPH 为日志着色")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.lg "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\"")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除所有已合并的分支")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.rmb "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"!git branch --merged | grep -v '*' | xargs -n 1 git branch -d\"")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 贡献排行")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.rank "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"shortlog -n -s --no-merges"')]),a._v("\n")])])]),t("h1",{attrs:{id:"技巧-3-查找-commits-和更改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧-3-查找-commits-和更改"}},[a._v("#")]),a._v(" 技巧 3：查找 Commits 和更改")]),a._v(" "),t("h2",{attrs:{id:"通过commits信息查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过commits信息查找"}},[a._v("#")]),a._v(" 通过commits信息查找")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过 commit 信息查找 (所有分支)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--all")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--grep")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'<search term>'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过 commit 信息查找 (包含 reflog)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log-g "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--grep")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'<search term>'")]),a._v("\n")])])]),t("h2",{attrs:{id:"通过更改查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过更改查找"}},[a._v("#")]),a._v(" 通过更改查找")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过更新的内容查找")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'<search term>'")]),a._v("\n")])])]),t("h2",{attrs:{id:"通过日期查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过日期查找"}},[a._v("#")]),a._v(" 通过日期查找")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过日期范围查找")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--after")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'DEC 152019'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--until")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'JAN 102020'")]),a._v("\n")])])]),t("h1",{attrs:{id:"技巧-4-添加hunk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧-4-添加hunk"}},[a._v("#")]),a._v(" 技巧 4：添加hunk")]),a._v(" "),t("p",[a._v("git add  不仅能添加文件的所有变更， --path / -p 参数还可以交互式暂存区块。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 补丁命令")]),a._v("\ny "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 暂存区块\nn "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 不暂存这个区块\nq "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 退出\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 暂存当前文件的此区块以及所有剩余区块\nd "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 不暂存当前文件的此区块以及所有剩余区块\n/ "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 查找区块 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("正则表达式"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\ns "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 划分成更小的区块\ne "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 手动编辑区块\n? "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 打印帮助说明\ng "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 选择要前往的区块\nj "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 将区块设为未定，查看下一个未定区块\nJ "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 将区块设为未定，查看下一个区块\nk "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 将区块设为未定，查看上一个未定区块\nJ "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 将区块设为未定，查看下一个区块\n")])])]),t("h1",{attrs:{id:"技巧-5-储藏-stash-更改而不提交"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧-5-储藏-stash-更改而不提交"}},[a._v("#")]),a._v(" 技巧 5：储藏（stash）更改而不提交")]),a._v(" "),t("p",[a._v("stash 将当前的更改临时搁置起来。在它的帮助下，可以返回当前状态的索引，并能在稍后应用已储藏的更改。\n默认情况下，仅储藏当前跟踪文件中的更改，新文件将被忽略。\n我们可以独立地创建和应用多个 stash。\n"),t("a",{attrs:{href:""}},[a._v("Git 工具 - 储藏与清理")])]),a._v(" "),t("h2",{attrs:{id:"创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[a._v("#")]),a._v(" 创建")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建新的 STASH")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建新的 STASH (包含未追踪的更改)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash -u/--include-untracked\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建新的 STASH 并命名")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash save"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<stash name>"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 交互式储藏")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v("\n")])])]),t("h2",{attrs:{id:"罗列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#罗列"}},[a._v("#")]),a._v(" 罗列")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# 列出所有的 STASH (为其他命令提供 "n")')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash list\n")])])]),t("h2",{attrs:{id:"浏览"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览"}},[a._v("#")]),a._v(" 浏览")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 浏览 STASH 内容")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash show\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 浏览 STASH 差异")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash show "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v("\n")])])]),t("h2",{attrs:{id:"应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[a._v("#")]),a._v(" 应用")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 应用上一个 STASH (删除 stash)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash pop\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 应用上一个 STASH (保留 stash)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash apply\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 应用特定的 STASH (n = stash 列表序号)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash pop/apply stash@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从 STASH 创建新的分支 (n = stash 列表序号)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash branch "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("newbranch name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" stash@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从 STASH 应用单个文件 (n = stash 列表序号)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout stash@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("filepath"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"清理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清理"}},[a._v("#")]),a._v(" 清理")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除特定的 STASH (n = stash 列表序号)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash drop stash@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除所有的 STASH")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("clear")]),a._v("\n")])])]),t("h1",{attrs:{id:"技巧-6-空运行-dry-run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧-6-空运行-dry-run"}},[a._v("#")]),a._v(" 技巧 6：空运行（Dry Run）")]),a._v(" "),t("p",[a._v("许多 git 操作可能具有破坏性，例如， git clean -f 将删除所有未跟踪的文件，而且无法恢复。\n要避免出现这种灾难性的结果，许多命令都支持 "),t("em",[a._v("dry-run")]),a._v(" ，可以在实际产生结果前对其进行检查。不过遗憾的是，使用的选项不完全一致：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean -n/--dry-run\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" -n/--dry-run\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -n/--dry-run\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GIT MERGE 模拟 DRY-RUN")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge --no-commit --no-ff "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cached")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--abort")]),a._v("\n")])])]),t("h1",{attrs:{id:"技巧-7-安全强制推送"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧-7-安全强制推送"}},[a._v("#")]),a._v(" 技巧 7：安全强制推送")]),a._v(" "),t("p",[a._v("在处理旧的 commit、创建新的 head 等情况时时很容易弄乱分支。 git push --force 可以覆盖远程变更，但不应该这样做！\ngit push --force 是一种具有破坏性且危险的操作，因为它无条件生效，并且会破坏其他提交者已经推送的所有 commit。这对于其他人的代码仓库来说不一定是致命的，但是改变历史记录并影响其他人并不是一个好主意。\n更好的选择是使用 git push --force-with-lease 。\ngit 不会无条件地覆盖上游的远程仓库，而是检查是否有本地不可用的远程更改。如果有，它会失败并显示一条“stale info”消息，并告诉我们需要先运行 git fetch 。\n"),t("a",{attrs:{href:"https://git-scm.com/docs/git-push#Documentation/git-push.txt---force-with-leaseltrefnamegt",target:"_blank",rel:"noopener noreferrer"}},[a._v("git push"),t("OutboundLink")],1)]),a._v(" "),t("h1",{attrs:{id:"技巧-8-修改-commit-信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧-8-修改-commit-信息"}},[a._v("#")]),a._v(" 技巧 8：修改 commit 信息")]),a._v(" "),t("p",[a._v("Commit 是不可变的，且不能更改。不过可以用一条新的 commit 信息修订现有的 commit，这会覆盖原始 commit，因此请勿在已推送的 commit 中使用它。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--amend")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<new commit message>"')]),a._v("\n")])])]),t("h1",{attrs:{id:"技巧-9-修改历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧-9-修改历史"}},[a._v("#")]),a._v(" 技巧 9：修改历史")]),a._v(" "),t("p",[a._v("修改代码仓库的历史不仅限于修改上次提交信息，使用 git rebase 可以修改多个提交：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 提交的范围")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase -i/--interactive HEAD~"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("number of commits"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 该 hash 之后的所有提交")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase -i/--interactive "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("在配置的编辑器中倒序列出所有的 commit，像这样：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#<command><commit hash><commit message>")]),a._v("\npick5df8fbc revamped logic\npick ca5154e README typos fixed\npick a104aff added awesome new feature\n")])])]),t("p",[a._v("通过更改编辑器中的实际内容，可以为 git 提供一个方案，来说明如何进行 rebase：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# p, pick = 使用提交而不更改")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# r, reword = 修改提交信息")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# e, edit = 编辑提交")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# s, squash = 汇合提交")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# f, fixup = 类似 "squash"，但是会丢弃提交信息')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# x, exec = 运行命令 (其余行)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# d, drop = 移除提交")]),a._v("\n")])])]),t("p",[a._v("保存编辑器后，git 将运行该方案以重写历史记录。\ne, edit 会暂停 rebase，就可以编辑代码仓库的当前状态。完成编辑后，运行 git rebase --continue 。\n如果过程中出现问题（例如合并冲突），我们需要重新开始，可以使用 git rebase --abort 。\n"),t("a",{attrs:{href:"https://git-scm.com/docs/git-rebase",target:"_blank",rel:"noopener noreferrer"}},[a._v("git-rebase"),t("OutboundLink")],1)]),a._v(" "),t("h1",{attrs:{id:"技巧-10-存档跟踪文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧-10-存档跟踪文件"}},[a._v("#")]),a._v(" 技巧 10：存档跟踪文件")]),a._v(" "),t("p",[a._v("可以使用不同格式（ zip 或 tar ）来压缩特定引用的跟踪文件：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" archive --format"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("format"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" --output"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("ref"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("可以是一个分支、commit hash 或者一个标签。\n"),t("a",{attrs:{href:"https://git-scm.com/docs/git-archive",target:"_blank",rel:"noopener noreferrer"}},[a._v("git-archive"),t("OutboundLink")],1)]),a._v(" "),t("h1",{attrs:{id:"额外提醒-单破折号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#额外提醒-单破折号"}},[a._v("#")]),a._v(" 额外提醒：单破折号")]),a._v(" "),t("p",[a._v("有一个快捷方式可以表示刚用过的分支：一个单破折号 -")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout my-branch\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前分支：my-branch")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("dosome "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" operations, e.g. adding/commiting"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout develop\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前分支：develop")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge -\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将 my-branch 合并到 develop")]),a._v("\n")])])]),t("p",[a._v("单破折号等同于 @{-1} 。\n"),t("a",{attrs:{href:"https://git-scm.com/docs/git-checkout#Documentation/git-checkout.txt-ltbranchgt",target:"_blank",rel:"noopener noreferrer"}},[a._v("git-checkout"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);