(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{482:function(e,t,a){"use strict";a.r(t);var s=a(2),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"相关资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关资料"}},[e._v("#")]),e._v(" 相关资料")]),e._v(" "),t("p",[e._v("kubeadm ：https://www.jianshu.com/p/1e65610dd223")]),e._v(" "),t("p",[e._v("docker hub:  https://hub.docker.com/")]),e._v(" "),t("p",[e._v("k8s的一些版本依赖:")]),e._v(" "),t("p",[e._v("https://kubernetes.io/zh/docs/setup/release/version-skew-policy/")]),e._v(" "),t("p",[e._v("​")]),e._v(" "),t("h1",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),t("h2",{attrs:{id:"系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#系统"}},[e._v("#")]),e._v(" 系统")]),e._v(" "),t("p",[e._v("​\tcentos 7.6")]),e._v(" "),t("p",[e._v("​\thttps://www.jianshu.com/p/1e65610dd223")]),e._v(" "),t("h2",{attrs:{id:"docker安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[e._v("#")]),e._v(" docker安装")]),e._v(" "),t("h3",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),t("p",[e._v("https://docs.docker.com/engine/install/centos/")]),e._v(" "),t("p",[e._v("https://blog.51cto.com/3241766/2405624")]),e._v(" "),t("h3",{attrs:{id:"安装依赖包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖包"}},[e._v("#")]),e._v(" 安装依赖包")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v(" yum-utils   device-mapper-persistent-data   lvm2\n")])])]),t("blockquote",[t("p",[e._v("yum-utils 提供了 yum-config-manager ，并且 device mapper 存储驱动程序需要 device-mapper-persistent-data 和 lvm2。")]),e._v(" "),t("p",[e._v("device mapper\nDevice Mapper 是 Linux2.6 内核中支持逻辑卷管理的通用设备映射机制，它为实现用于存储资源管理的块设备驱动提供了一个高度模块化的内核架构。")]),e._v(" "),t("p",[e._v("LVM\nLVM（Logical Volume Manager）逻辑卷管理。")]),e._v(" "),t("p",[e._v("它是对磁盘分区进行管理的一种机制，建立在硬盘和分区之上的一个逻辑层，用来提高磁盘管理的灵活性。通过LVM可将若干个磁盘分区连接为一个整块的卷组(Volume Group)，形成一个存储池。可以在卷组上随意创建逻辑卷(Logical Volumes)，并进一步在逻辑卷上创建文件系统，与直接使用物理存储在管理上相比，提供了更好灵活性。")]),e._v(" "),t("p",[e._v("device-mapper-persistent-data 和 lvm2\n两者都是Device Mapper所需要的。")])]),e._v(" "),t("h3",{attrs:{id:"设置docker源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置docker源"}},[e._v("#")]),e._v(" 设置Docker源")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("yum-config-manager     --add-repo     https://download.docker.com/linux/centos/docker-ce.repo\n")])])]),t("h3",{attrs:{id:"docker安装版本查看"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker安装版本查看"}},[e._v("#")]),e._v(" docker安装版本查看")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("yum list docker-ce "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--showduplicates")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sort")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-r")]),e._v("\n")])])]),t("h3",{attrs:{id:"安装docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[e._v("#")]),e._v(" 安装docker")]),e._v(" "),t("p",[e._v("指定版本")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" docker-ce-18.09.6 docker-ce-cli-18.09.6 containerd.io\n")])])]),t("p",[e._v("安装最新版本")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("yum install docker-ce\n")])])]),t("h3",{attrs:{id:"启动docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动docker"}},[e._v("#")]),e._v(" 启动docker")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("systemctl start "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v("\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v("\n")])])]),t("h3",{attrs:{id:"修改docker镜像仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改docker镜像仓库"}},[e._v("#")]),e._v(" 修改docker镜像仓库")]),e._v(" "),t("p",[e._v("查看：docker info|grep Registry")]),e._v(" "),t("p",[e._v("https://www.runoob.com/docker/docker-mirror-acceleration.html")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" /etc/docker\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#修改cgroup驱动为systemd[k8s官方推荐]、限制容器日志量、修改存储类型，最后的docker家目录可修改")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/docker/daemon.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('EOF\n{\n  "exec-opts": ["native.cgroupdriver=systemd"],\n  "log-driver": "json-file",\n  "log-opts": {\n    "max-size": "100m"\n  },\n  "storage-driver": "overlay2",\n  "storage-opts": [\n    "overlay2.override_kernel_check=true"\n  ],\n  "registry-mirrors": ["https://7uuu3esz.mirror.aliyuncs.com"],\n  "data-root": "/data/docker"\n}\nEOF')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#添加开机自启，立即启动")]),e._v("\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--now")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v("\nsystemctl daemon-reload\nsystemctl restart "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v("\n")])])]),t("h2",{attrs:{id:"k8s单机安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s单机安装"}},[e._v("#")]),e._v(" k8s单机安装")]),e._v(" "),t("p",[e._v("https://www.jianshu.com/p/0ef60c7172b5")]),e._v(" "),t("h3",{attrs:{id:"添加kubernetes源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加kubernetes源"}},[e._v("#")]),e._v(" 添加kubernetes源")]),e._v(" "),t("div",{staticClass:"language-ruby extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[e._v("cat "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("etc"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("yum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("repos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("d"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("kubernetes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("repo "),t("span",{pre:!0,attrs:{class:"token string-literal heredoc-string"}},[t("span",{pre:!0,attrs:{class:"token delimiter"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<<")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[e._v("EOF")])]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\n")]),t("span",{pre:!0,attrs:{class:"token delimiter"}},[t("span",{pre:!0,attrs:{class:"token symbol"}},[e._v("EOF")])])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#重建yum缓存，输入y添加证书认证")]),e._v("\nyum makecache fast\n")])])]),t("h3",{attrs:{id:"查看安装版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看安装版本"}},[e._v("#")]),e._v(" 查看安装版本")]),e._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[e._v("yum list "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("grep kubelet\nyum list "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("grep kubeadm\nyum list "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("grep kubectl\nyum list kubelet "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v("showduplicates "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" sort "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("r"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" \n")])])]),t("p",[e._v("卸载")]),e._v(" "),t("p",[e._v("yum remove kubelet")]),e._v(" "),t("p",[e._v("yum remove kubeadm")]),e._v(" "),t("p",[e._v("yum remove kubectl")]),e._v(" "),t("h3",{attrs:{id:"安装kubeadm、kubelet、kubectl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装kubeadm、kubelet、kubectl"}},[e._v("#")]),e._v(" 安装kubeadm、kubelet、kubectl")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v(" kubelet-1.19.0-0 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--disableexcludes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("kubernetes\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v(" kubeadm-1.19.0-0 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--disableexcludes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("kubernetes\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v(" kubectl-1.19.0-0 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--disableexcludes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("kubernetes\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--now")]),e._v(" kubelet\n")])])]),t("h3",{attrs:{id:"配置自动补全命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置自动补全命令"}},[e._v("#")]),e._v(" 配置自动补全命令")]),e._v(" "),t("div",{staticClass:"language-ruby extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#安装bash自动补全插件")]),e._v("\nyum install bash"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("completion "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("y\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#设置kubectl与kubeadm命令补全，下次login生效")]),e._v("\nkubectl completion bash "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("etc"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("bash_completion"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("d"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("kubectl\nkubeadm completion bash "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("etc"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("bash_completion"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("d"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("kubeadm\n")])])]),t("h3",{attrs:{id:"查看kubernetes镜像依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看kubernetes镜像依赖"}},[e._v("#")]),e._v(" 查看kubernetes镜像依赖")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("kubeadm config images list --kubernetes-version v1.19.0\n")])])]),t("h3",{attrs:{id:"新建-get-k8s-images-sh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建-get-k8s-images-sh"}},[e._v("#")]),e._v(" 新建 get-k8s-images.sh")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[e._v("#!/bin/bash")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Script For Quick Pull K8S Docker Images")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# by qiraosky <qiraosky@qq.com>")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#没有1.20.4得镜像，所以装1.19.0")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("KUBE_VERSION")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("v1.19.0\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("PAUSE_VERSION")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.2")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CORE_DNS_VERSION")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.7")]),e._v(".0\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ETCD_VERSION")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.4")]),e._v(".9-1\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# pull kubernetes images from hub.docker.com")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull kubesphere/kube-proxy-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull kubesphere/kube-controller-manager-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull kubesphere/kube-apiserver-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull kubesphere/kube-scheduler-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# pull aliyuncs mirror docker images")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PAUSE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$CORE_DNS_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ETCD_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull quay.io/coreos/flannel:v0.12.0-arm64\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull quay.io/coreos/flannel:v0.12.0-amd64\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# retag to k8s.gcr.io prefix")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" tag kubesphere/kube-proxy-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("  k8s.gcr.io/kube-proxy:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" tag kubesphere/kube-controller-manager-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v(" k8s.gcr.io/kube-controller-manager:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" tag kubesphere/kube-apiserver-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v(" k8s.gcr.io/kube-apiserver:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" tag kubesphere/kube-scheduler-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v(" k8s.gcr.io/kube-scheduler:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PAUSE_VERSION")]),e._v(" k8s.gcr.io/pause:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PAUSE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" tag registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$CORE_DNS_VERSION")]),e._v(" k8s.gcr.io/coredns:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$CORE_DNS_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" tag registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ETCD_VERSION")]),e._v(" k8s.gcr.io/etcd:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ETCD_VERSION")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# untag origin tag, the images won't be delete.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" rmi kubesphere/kube-proxy-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" rmi kubesphere/kube-controller-manager-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" rmi kubesphere/kube-apiserver-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" rmi kubesphere/kube-scheduler-amd64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" rmi registry.cn-hangzhou.aliyuncs.com/google_containers/pause:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PAUSE_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" rmi registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$CORE_DNS_VERSION")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" rmi registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ETCD_VERSION")]),e._v("\n")])])]),t("h3",{attrs:{id:"初始化kube-master"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化kube-master"}},[e._v("#")]),e._v(" 初始化kube-master")]),e._v(" "),t("p",[e._v("修改kubelet配置默认cgroup driver")]),e._v(" "),t("div",{staticClass:"language-ruby extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[e._v("mkdir "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("var"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("lib"),t("span",{pre:!0,attrs:{class:"token regex-literal"}},[t("span",{pre:!0,attrs:{class:"token regex"}},[e._v("/kubelet/")])]),e._v("\ncat "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("var"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("lib"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("kubelet"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("yaml "),t("span",{pre:!0,attrs:{class:"token string-literal heredoc-string"}},[t("span",{pre:!0,attrs:{class:"token delimiter"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<<")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[e._v("EOF")])]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\napiVersion: kubelet.config.k8s.io/v1beta1\nkind: KubeletConfiguration\ncgroupDriver: systemd\n")]),t("span",{pre:!0,attrs:{class:"token delimiter"}},[t("span",{pre:!0,attrs:{class:"token symbol"}},[e._v("EOF")])])]),e._v("\nsystemctl restart kubelet\n")])])]),t("h3",{attrs:{id:"测试环境是否正常"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试环境是否正常"}},[e._v("#")]),e._v(" 测试环境是否正常")]),e._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[e._v("kubeadm "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("init")]),e._v(" phase preflight\n")])])]),t("p",[e._v("（WARNING是正常的）")]),e._v(" "),t("p",[e._v("其实也可以手动执行命令，讲依赖的镜像都拉下来先：")]),e._v(" "),t("p",[e._v("kubeadm config images pull")]),e._v(" "),t("p",[e._v("这里是最麻烦得，可能因为网络原因拉不下来，所以考虑从阿里云拉下来，然后重新打tag")]),e._v(" "),t("h3",{attrs:{id:"初始化k8s-init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化k8s-init"}},[e._v("#")]),e._v(" 初始化k8s init")]),e._v(" "),t("p",[e._v("​\tkubeadm init --pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.19.0")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[root@localhost ~]# kubeadm init --pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.19.0\nW0314 10:10:40.638775    5741 configset.go:348] WARNING: kubeadm cannot validate component configs for API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io]\n[init] Using Kubernetes version: v1.19.0\n[preflight] Running pre-flight checks\n        [WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/\n        [WARNING SystemVerification]: this Docker version is not on the list of validated versions: 20.10.5. Latest validated version: 19.03\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action in beforehand using \'kubeadm config images pull\'\n[certs] Using certificateDir folder "/etc/kubernetes/pki"\n[certs] Generating "ca" certificate and key\n[certs] Generating "apiserver" certificate and key\n[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local localhost.localdomain] and IPs [10.96.0.1 172.16.11.251]\n[certs] Generating "apiserver-kubelet-client" certificate and key\n[certs] Generating "front-proxy-ca" certificate and key\n[certs] Generating "front-proxy-client" certificate and key\n[certs] Generating "etcd/ca" certificate and key\n[certs] Generating "etcd/server" certificate and key\n[certs] etcd/server serving cert is signed for DNS names [localhost localhost.localdomain] and IPs [172.16.11.251 127.0.0.1 ::1]\n[certs] Generating "etcd/peer" certificate and key\n[certs] etcd/peer serving cert is signed for DNS names [localhost localhost.localdomain] and IPs [172.16.11.251 127.0.0.1 ::1]\n[certs] Generating "etcd/healthcheck-client" certificate and key\n[certs] Generating "apiserver-etcd-client" certificate and key\n[certs] Generating "sa" key and public key\n[kubeconfig] Using kubeconfig folder "/etc/kubernetes"\n[kubeconfig] Writing "admin.conf" kubeconfig file\n[kubeconfig] Writing "kubelet.conf" kubeconfig file\n[kubeconfig] Writing "controller-manager.conf" kubeconfig file\n[kubeconfig] Writing "scheduler.conf" kubeconfig file\n[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"\n[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"\n[kubelet-start] Starting the kubelet\n[control-plane] Using manifest folder "/etc/kubernetes/manifests"\n[control-plane] Creating static Pod manifest for "kube-apiserver"\n[control-plane] Creating static Pod manifest for "kube-controller-manager"\n[control-plane] Creating static Pod manifest for "kube-scheduler"\n[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s\n[apiclient] All control plane components are healthy after 14.502735 seconds\n[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace\n[kubelet] Creating a ConfigMap "kubelet-config-1.19" in namespace kube-system with the configuration for the kubelets in the cluster\n[upload-certs] Skipping phase. Please see --upload-certs\n[mark-control-plane] Marking the node localhost.localdomain as control-plane by adding the label "node-role.kubernetes.io/master=\'\'"\n[mark-control-plane] Marking the node localhost.localdomain as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n[bootstrap-token] Using token: mobxtr.i1vybgejaili60t7\n[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to get nodes\n[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace\n[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key\n[addons] Applied essential addon: CoreDNS\n[addons] Applied essential addon: kube-proxy\n\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun "kubectl apply -f [podnetwork].yaml" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 172.16.11.251:6443 --token mobxtr.i1vybgejaili60t7 \\\n    --discovery-token-ca-cert-hash sha256:38543ff152bae1e5fe09da1fe51988e93c8221e43784194dfe052c3b9092850d \n[root@localhost ~]# \n')])])]),t("p",[e._v("可以看待kube 启动了部分进程")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[root@localhost ~]# ps -ef|grep kube\nroot      7304  7189  5 10:10 ?        00:00:04 etcd --advertise-client-urls=https://172.16.11.251:2379 --cert-file=/etc/kubernetes/pki/etcd/server.crt --client-cert-auth=true --data-dir=/var/lib/etcd --initial-advertise-peer-urls=https://172.16.11.251:2380 --initial-cluster=localhost.localdomain=https://172.16.11.251:2380 --key-file=/etc/kubernetes/pki/etcd/server.key --listen-client-urls=https://127.0.0.1:2379,https://172.16.11.251:2379 --listen-metrics-urls=http://127.0.0.1:2381 --listen-peer-urls=https://172.16.11.251:2380 --name=localhost.localdomain --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt --peer-client-cert-auth=true --peer-key-file=/etc/kubernetes/pki/etcd/peer.key --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt --snapshot-count=10000 --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt\nroot      7305  7196  2 10:10 ?        00:00:02 kube-scheduler --authentication-kubeconfig=/etc/kubernetes/scheduler.conf --authorization-kubeconfig=/etc/kubernetes/scheduler.conf --bind-address=127.0.0.1 -kubeconfig=/etc/kubernetes/scheduler.conf --leader-elect=true --port=0\nroot      7312  7194 18 10:10 ?        00:00:14 kube-apiserver --advertise-address=172.16.11.251 --allow-privileged=true --authorization-mode=Node,RBAC --client-ca-file=/etc/kubernetes/pki/ca.crt --enable-admission-plugins=NodeRestriction --enable-bootstrap-token-auth=true --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key --etcd-servers=https://127.0.0.1:2379 --insecure-port=0 --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key --requestheader-allowed-names=front-proxy-client --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --secure-port=6443 --service-account-key-file=/etc/kubernetes/pki/sa.pub --service-cluster-ip-range=10.96.0.0/12 --tls-cert-file=/etc/kubernetes/pki/apiserver.crt --tls-private-key-file=/etc/kubernetes/pki/apiserver.key\nroot      7316  7190  5 10:10 ?        00:00:04 kube-controller-manager --allocate-node-cidrs=true --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf --bind-address=127.0.0.1 --client-ca-file=/etc/kubernetes/pki/ca.crt --cluster-cidr=10.244.0.0/16 --cluster-name=kubernetes --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt --cluster-signing-key-file=/etc/kubernetes/pki/ca.key --controllers=*,bootstrapsigner,tokencleaner --kubeconfig=/etc/kubernetes/controller-manager.conf --leader-elect=true --node-cidr-mask-size=24 --port=0 --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt --root-ca-file=/etc/kubernetes/pki/ca.crt --service-account-private-key-file=/etc/kubernetes/pki/sa.key --service-cluster-ip-range=10.96.0.0/12 --use-service-account-credentials=true\nroot      8102     1  4 10:11 ?        00:00:03 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --network-plugin=cni --pod-infra-container-image=k8s.gcr.io/pause:3.2\nroot      8575  8540  0 10:11 ?        00:00:00 /usr/local/bin/kube-proxy --config=/var/lib/kube-proxy/config.conf --hostname-override=localhost.localdomain\n\n\n")])])]),t("h3",{attrs:{id:"配置master认证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置master认证"}},[e._v("#")]),e._v(" 配置master认证")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'export KUBECONFIG=/etc/kubernetes/admin.conf'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/profile\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v(" /etc/profile\n")])])]),t("h3",{attrs:{id:"安装网络组件flannel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装网络组件flannel"}},[e._v("#")]),e._v(" 安装网络组件flannel")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 注意这里下载kubectl apply -f kube-flannel.yaml需要科学上网")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml \nkubectl apply "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-f")]),e._v(" kube-flannel.yaml\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("root@localhost k8s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# kubectl apply -f kube-flannel.yml ")]),e._v("\npodsecuritypolicy.policy/psp.flannel.unprivileged created\nclusterrole.rbac.authorization.k8s.io/flannel created\nclusterrolebinding.rbac.authorization.k8s.io/flannel created\nserviceaccount/flannel created\nconfigmap/kube-flannel-cfg created\ndaemonset.apps/kube-flannel-ds created\n")])])]),t("h3",{attrs:{id:"查看kube-master节点状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看kube-master节点状态"}},[e._v("#")]),e._v(" 查看kube-master节点状态")]),e._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[e._v("kubectl "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("get")]),e._v(" nodes\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("root"),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("@localhost")]),e._v(" k8s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("# kubectl "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("get")]),e._v(" nodes\nNAME                    STATUS     ROLES    AGE   VERSION\nlocalhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("localdomain   NotReady   master   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("17m")]),e._v("   v1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("19.0")]),e._v("\n")])])]),t("h3",{attrs:{id:"查看所有pod-状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看所有pod-状态"}},[e._v("#")]),e._v(" 查看所有pod 状态")]),e._v(" "),t("p",[e._v("如果长时间达不到 ready 可以")]),e._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[e._v("kubectl "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("get")]),e._v(" pods "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v("all"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("namespaces\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("root"),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("@localhost")]),e._v(" k8s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("# kubectl "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("get")]),e._v(" pods "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v("all"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("namespaces\nNAMESPACE     NAME                                            READY   STATUS    RESTARTS   AGE\nkube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("system   coredns"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("f9fd979d6"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("4v47g                         "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("17m")]),e._v("\nkube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("system   coredns"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("f9fd979d6"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("w6js5                         "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("17m")]),e._v("\nkube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("system   etcd"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("localdomain                      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("17m")]),e._v("\nkube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("system   kube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("apiserver"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("localdomain            "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("17m")]),e._v("\nkube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("system   kube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("controller"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("manager"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("localdomain   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("17m")]),e._v("\nkube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("system   kube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("flannel"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("ds"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("jz75j                           "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("          42s\nkube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("system   kube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("proxy"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("l5h2r                                "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("17m")]),e._v("\nkube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("system   kube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("scheduler"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("localdomain            "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("17m")]),e._v("\n")])])]),t("p",[e._v("如果有pod有异常，可以查看描述以解决异常")]),e._v(" "),t("div",{staticClass:"language-objectivec extra-class"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[e._v("kubectl "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("n kube"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("system describe  pod"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("id\n")])])]),t("h3",{attrs:{id:"将pod调度到master节点-单机运行k8s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将pod调度到master节点-单机运行k8s"}},[e._v("#")]),e._v(" 将Pod调度到Master节点（单机运行K8S）")]),e._v(" "),t("p",[e._v("​\t出于安全考虑，默认配置下Kubernetes不会将Pod调度到Master节点。如果希望将k8s-master也当作Node使用，可以执行如下命令：")]),e._v(" "),t("div",{staticClass:"language-undefined extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("kubectl taint node k8s-master node-role.kubernetes.io/master-\n")])])]),t("p",[e._v("其中k8s-master是主机节点hostname如果要恢复Master Only状态，执行如下命令：")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("kubectl taint "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("node")]),e._v(" k8s-master node-role.kubernetes.io/master"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n")])])]),t("h2",{attrs:{id:"hello-world"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[e._v("#")]),e._v(" Hello World")]),e._v(" "),t("h4",{attrs:{id:"运行hello-world"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行hello-world"}},[e._v("#")]),e._v(" 运行hello world")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('kubectl run hello-world --replicas=5 --labels="run=load-balancer-example" --image=gcr.io/google-samples/node-hello:1.0  --port=8080\n\n[root@localhost ~]# kubectl run hello-world --replicas=5 --labels="run=load-balancer-example" --image=gcr.io/google-samples/node-hello:1.0  --port=8080\nFlag --replicas has been deprecated, has no effect and will be removed in the future.\npod/hello-world created\n')])])]),t("p",[t("strong",[e._v("kubectl describe pod")])]),e._v(" "),t("h2",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[e._v("#")]),e._v(" 常用命令")]),e._v(" "),t("h4",{attrs:{id:"关闭k8s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关闭k8s"}},[e._v("#")]),e._v(" 关闭k8s")]),e._v(" "),t("p",[e._v("service kubelet stop")]),e._v(" "),t("p",[e._v("彻底关闭用 systemctl disable kubelet")]),e._v(" "),t("h1",{attrs:{id:"常见问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[e._v("#")]),e._v(" 常见问题")]),e._v(" "),t("h2",{attrs:{id:"swap-需要关闭或者k8s忽略swap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#swap-需要关闭或者k8s忽略swap"}},[e._v("#")]),e._v(" swap 需要关闭或者k8s忽略swap")]),e._v(" "),t("p",[e._v("[ERROR Swap]: running with swap on is not supported. Please disable swap")]),e._v(" "),t("p",[e._v("系统命令关闭 ：swapoff  -a;  free 查看 ，swap为0")]),e._v(" "),t("h2",{attrs:{id:"k8s-版本的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s-版本的问题"}},[e._v("#")]),e._v(" k8s 版本的问题")]),e._v(" "),t("p",[e._v("[root@localhost sysconfig]# kubelet --version\nKubernetes v1.20.4")]),e._v(" "),t("p",[e._v("由于默认安装kubelet 命令的时候的时候版本是1.20.4，但是init过程中又拉不到v1.20.4的镜像，需要版本保持一致")]),e._v(" "),t("h2",{attrs:{id:"镜像下载不下来的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像下载不下来的问题"}},[e._v("#")]),e._v(" 镜像下载不下来的问题")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("    [ERROR ImagePull]: failed to pull image k8s.gcr.io/kube-apiserver:v1.19.8: output: Error response from daemon: Get https://k8s.gcr.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)\n")])])]),t("p",[e._v("由于没有科学上网，所以 k8s.gcr.io 是无法访问的。所以要手动处理：")]),e._v(" "),t("p",[e._v("docker search kube-apiserver")]),e._v(" "),t("p",[e._v("#换可以拉的源docker hub源，但是dockerhub上镜像可能不够行")]),e._v(" "),t("p",[e._v("docker pull mirrorgooglecontainers/kube-apiserver:v1.19.0\ndocker pull mirrorgooglecontainers/kube-controller-manager:v1.19.0\ndocker pull mirrorgooglecontainers/kube-scheduler:v1.19.0\ndocker pull mirrorgooglecontainers/kube-proxy:v1.19.0\ndocker pull mirrorgooglecontainers/pause:3.2\ndocker pull mirrorgooglecontainers/etcd:3.4.9-1\ndocker pull mirrorgooglecontainers/coredns:1.7.0")]),e._v(" "),t("p",[e._v("#重命名镜像")]),e._v(" "),t("p",[e._v("docker tag mirrorgooglecontainers/kube-apiserver:v1.19.0 k8s.gcr.io/kube-apiserver:v1.19.0"),t("br"),e._v("\ndocker tag mirrorgooglecontainers/kube-controller-manager:v1.19.0 k8s.gcr.io/kube-controller-manager:v1.19.0\ndocker tag mirrorgooglecontainers/kube-scheduler:v1.19.0 k8s.gcr.io/kube-scheduler:v1.19.0"),t("br"),e._v("\ndocker tag mirrorgooglecontainers/kube-proxy:v1.19.0 k8s.gcr.io/kube-proxy:v1.19.0"),t("br"),e._v("\ndocker tag mirrorgooglecontainers/pause:3.2 k8s.gcr.io/pause:3.2"),t("br"),e._v("\ndocker tag mirrorgooglecontainers/etcd:3.4.9-1 k8s.gcr.io/etcd:3.4.9-1"),t("br"),e._v("\ndocker tag mirrorgooglecontainers/coredns:1.7.0 k8s.gcr.io/coredns:1.7.0")]),e._v(" "),t("p",[e._v("########################################################")]),e._v(" "),t("p",[e._v("#从阿里云拉\ndocker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.19.0\ndocker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.19.0\ndocker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.19.0\ndocker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.19.0\ndocker pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.2\ndocker pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:3.4.9-1\ndocker pull registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.7.0")]),e._v(" "),t("p",[e._v("#重命名镜像")]),e._v(" "),t("p",[e._v("docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.19.0 k8s.gcr.io/kube-apiserver:v1.19.0\ndocker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.19.0 k8s.gcr.io/kube-controller-manager:v1.19.0\ndocker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.19.0 k8s.gcr.io/kube-scheduler:v1.19.0\ndocker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.19.0 k8s.gcr.io/kube-proxy:v1.19.0\ndocker tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.2 k8s.gcr.io/pause:3.2\ndocker tag registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:3.4.9-1 k8s.gcr.io/etcd:3.4.9-1\ndocker tag registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.7.0 k8s.gcr.io/coredns:1.7.0")]),e._v(" "),t("p",[e._v("Error response from daemon: toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limit")]),e._v(" "),t("p",[e._v("#有可能下载得时候一定要v1.90.8")]),e._v(" "),t("h2",{attrs:{id:"下载频率限制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载频率限制"}},[e._v("#")]),e._v(" 下载频率限制")]),e._v(" "),t("p",[e._v("Error response from daemon: toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limit")]),e._v(" "),t("p",[e._v("​")])])}),[],!1,null,null,null);t.default=r.exports}}]);