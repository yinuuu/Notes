(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{471:function(s,t,n){"use strict";n.r(t);var a=n(2),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("a",{attrs:{href:"http://www.vim.org",target:"_blank",rel:"noopener noreferrer"}},[s._v("Vim"),t("OutboundLink")],1),s._v("\n(Vi IMproved) 是 Unix 上的流行编辑器 vi 的克隆版本。这个文本编辑器是为性能和提升效率而设计的，并且在大多数基于 unix 的系统上普遍存在。它有大量的快捷键可用来快速导航到文件的特定位置，以便进行快速编辑。")]),s._v(" "),t("h3",{attrs:{id:"vim-导航基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vim-导航基础"}},[s._v("#")]),s._v(" Vim 导航基础")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 Vim 中打开 <filename>")]),s._v("\n    :q               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 退出 Vim")]),s._v("\n    :w               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保存当前文件")]),s._v("\n    :wq              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保存文件并退出 Vim ")]),s._v("\n    :q"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 退出 Vim 并且不保存文件")]),s._v("\n                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ! *强制* 执行 :q， 因此没有保存就退出 Vim")]),s._v("\n    :x               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保存文件并且退出 Vim， 是 :wq 的简写版本")]),s._v("\n\n    u                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 撤销")]),s._v("\n    CTRL+R           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重做")]),s._v("\n\n    h                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 左移一个字符")]),s._v("\n    j                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下移一行")]),s._v("\n    k                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上移一行")]),s._v("\n    l                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 右移一个字符")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在行内移动")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移到行首")]),s._v("\n    $                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移到行尾")]),s._v("\n    ^                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移到行内的第一个非空白字符处")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在文本中查找")]),s._v("\n\n    /word            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 光标之后的所有该词都高亮显示")]),s._v("\n    ?word            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 光标之前的所有该词都高亮显示")]),s._v("\n    n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找后将光标移到该词的下一个出现位置")]),s._v("\n    N                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 光标移到该词的上一个出现位置")]),s._v("\n\n    :%s/foo/bar/g    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将文件每一行上的所有 'foo' 都改成 'bar'")]),s._v("\n    :s/foo/bar/g     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将当前行上的所有 'foo' 都改成 'bar'")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跳到字符处")]),s._v("\n\n    f"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("字符"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 向前跳移到 <字符> 上")]),s._v("\n    t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("字符"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 向前跳移到 <字符> 的左侧")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如，")]),s._v("\n    f"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 向前跳移到 < 上")]),s._v("\n    t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 向前跳移到 < 的左侧")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按词移动")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认一个单词由字母，数字和下划线组成")]),s._v("\n\n    w                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移动到下一个词首")]),s._v("\n    b                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移动到前一个词首")]),s._v("\n    e                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移动到下一个词尾")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移动的其它命令")]),s._v("\n\n    gg               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移到文件顶部")]),s._v("\n    G                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移到文件末尾")]),s._v("\n    :NUM             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移到第 NUM 行 (NUM 是任意数字)")]),s._v("\n    H                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移到屏幕顶部")]),s._v("\n    M                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移到屏幕中间位置")]),s._v("\n    L                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移到屏幕末尾")]),s._v("\n")])])]),t("h3",{attrs:{id:"模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模式"}},[s._v("#")]),s._v(" 模式")]),s._v(" "),t("p",[s._v("Vim 基于 "),t("strong",[s._v("模式")]),s._v(" 这个概念。\n命令模式 - Vim 启动后就处于这个模式，用于导航和操作命令\n插入模式 - 用于在你的文件中进行修改\n可视模式 - 用于高亮文本并对它们进行操作\nEx 模式  - 用于跳到底部的 ':' 提示行上输入命令")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("    i                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在光标位置前，将 Vim 切换到插入模式")]),s._v("\n    a                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在光标位置后，将 Vim 切换到插入模式")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("v")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 Vim 切换到可视模式")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 Vim 切换到 ex 模式")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("esc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 无论你当前处于什么模式，都返回到命令模式")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制和粘贴文本")]),s._v("\n\n    y                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制所选的内容")]),s._v("\n    yy               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制当前行")]),s._v("\n    d                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所选的内容")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dd")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除当前行")]),s._v("\n    p                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在当前光标位置后粘贴复制的文本")]),s._v("\n    P                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在当前光标位置前粘贴复制的文本")]),s._v("\n    x                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除当前光标位置处的字符")]),s._v("\n")])])]),t("h3",{attrs:{id:"vim-的-语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vim-的-语法"}},[s._v("#")]),s._v(" Vim 的 '语法'")]),s._v(" "),t("p",[s._v("Vim 可以被认为是按 '动词-修饰词-名词' 格式编排的一组命令：\n动词     - 你的动作\n修饰词   - 你如何执行你的动作\n名词     - 你的动作所作用于的对象\n关于 '动词'，'修饰词'，和 '名词' 的几个重要例子：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# '动词'")]),s._v("\n\n    d                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除")]),s._v("\n    c                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改")]),s._v("\n    y                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("v")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可视化选择")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# '修饰词'")]),s._v("\n\n    i                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 内部的")]),s._v("\n    a                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 周围的")]),s._v("\n    NUM              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数字 (NUM 是任意数字)")]),s._v("\n    f                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找文本并位于其上")]),s._v("\n    t                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找文本并停于其前面")]),s._v("\n    /                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从光标处开始查找字符串")]),s._v("\n    ?                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在光标前查找字符串")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# '名词'")]),s._v("\n\n    w                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 词")]),s._v("\n    s                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 句子")]),s._v("\n    p                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 段落")]),s._v("\n    b                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 块")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例 '语句' 或命令")]),s._v("\n\n    d2w              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除 2 个词")]),s._v("\n    cis              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改段落内的内容")]),s._v("\n    yip              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制段落内的内容 (复制你所在的段落)")]),s._v("\n    ct"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改直到括号开启处")]),s._v("\n                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对你的当前位置直到下个括号开启处的内容进行修改")]),s._v("\n    d$               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除直到行尾")]),s._v("\n")])])]),t("h3",{attrs:{id:"一些快捷键和技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些快捷键和技巧"}},[s._v("#")]),s._v(" 一些快捷键和技巧")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将所选内容缩进一级")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将所选内容取消缩进一级")]),s._v("\n    :earlier 15m     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将文档还原到 15 分钟前的状态")]),s._v("\n    :later 15m       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 逆转上述命令")]),s._v("\n    ddp              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相邻行交换位置，先 dd 再 p")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重复之前动作")]),s._v("\n")])])]),t("h3",{attrs:{id:"宏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#宏"}},[s._v("#")]),s._v(" 宏")]),s._v(" "),t("p",[s._v("宏基本上来说就是可录制的动作。\n当你开始录制宏时，它会记录你使用的 "),t("strong",[s._v("每个")]),s._v(" 动作和命令，\n直到你停止录制。当调用宏时，它会将这个完全相同的动作和命令序列\n再次应用于所选文本之上。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("    qa               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开始录制一个叫 'a' 的宏")]),s._v("\n    q                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止录制")]),s._v("\n    @a               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重播宏")]),s._v("\n")])])]),t("h3",{attrs:{id:"配置-vimrc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-vimrc"}},[s._v("#")]),s._v(" 配置 ~/.vimrc")]),s._v(" "),t("p",[s._v(".vimrc 可用于在启动时对 Vim 进行配置。\n这里是一个示例 ~/.vimrc 文件：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 示例 ~/.vimrc\n"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2015.10")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 需要 Vim iMproved 版本\nset nocompatible\n\n"')]),s._v(" 根据文件名检测文件类型，以便能进行智能自动缩进等操作。\nfiletype indent plugin on\n\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 开启语法高亮\nsyntax on\n\n"')]),s._v(" 更好的命令行补全\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" wildmenu\n\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 除了当使用大写字母时使用大小写无关查找\nset ignorecase\nset smartcase\n\n"')]),s._v(" 当新开一行时，如果没有开启文件特定的缩进规则，\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 则缩进保持与你当前行一致\nset autoindent\n\n"')]),s._v(" 在左侧显示行号\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" number\n\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 缩进选项，根据个人偏好进行修改\n\n"')]),s._v(" 每个 TAB 的可视空格数\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("tabstop")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 编辑时 TAB 对应的空格数\nset softtabstop=4\n\n"')]),s._v(" 当使用缩进操作 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" 和 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 时缩进的空格数\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("shiftwidth")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 将 TAB 转换成空格\nset expandtab\n\n"')]),s._v(" 为缩进和对齐开启智能化的 TAB 和空格切换功能\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" smarttab\n")])])]),t("h3",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),t("p",[t("a",{attrs:{href:"http://www.vim.org/index.php",target:"_blank",rel:"noopener noreferrer"}},[s._v("Vim | Home"),t("OutboundLink")],1),s._v(" "),t("code",[s._v("$ vimtutor")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://danielmiessler.com/study/vim/",target:"_blank",rel:"noopener noreferrer"}},[s._v("A vim Tutorial and Primer"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"http://stackoverflow.com/questions/726894/what-are-the-dark-corners-of-vim-your-mom-never-told-you-about",target:"_blank",rel:"noopener noreferrer"}},[s._v("What are the dark corners of Vim your mom never told you about? (Stack Overflow thread)"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Vim",target:"_blank",rel:"noopener noreferrer"}},[s._v("Arch Linux Wiki"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);